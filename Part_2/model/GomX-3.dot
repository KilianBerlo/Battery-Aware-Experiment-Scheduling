digraph G {
	rankdir = TB;
	bgcolor = transparent;
	node [style = filled, fillcolor = white];
__global_vars__ [shape=plaintext, fillcolor="transparent", label=<<table border="0"><tr><td align="left" valign="top" colspan="2">Global variables:</td></tr><tr><td align="left" valign="top">clk</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">job_clk</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">L_Band_Inmarsat_3F2_data</td><td align="left" valign="top" balign="left">= [ 89, 182, 187, 280, 283, 375, 378, 471, 474, 567, 572, 665, 673, 766, 774, 867, 871, 964, 967, 1060, 1063, 1156, 1159, 1251, 1256, 1349, 1356, 1449, 1458, 1550, 1556, 1649, 1652, 1745, 1748, 1841, 1843, 1936, 1940, 2033, 2040, 2133, 2141, 2234, 2241, 2333, 2337, 2430, 2433, 2526, 2528, 2621, 2625, 2717, 2723, 2816, 2825, 2918, 2925, 3018, 3022, 3115, 3118, 3211, 3213, 3306, 3309, 3402, 3407, 3500, 3508, 3601, 3609, 3702, 3707, 3800, 0 ]</td></tr><tr><td align="left" valign="top">L_Band_Inmarsat_3F3_data</td><td align="left" valign="top" balign="left">= [ 45, 138, 142, 235, 238, 331, 333, 426, 429, 522, 528, 621, 629, 722, 729, 822, 827, 920, 923, 1016, 1018, 1111, 1114, 1207, 1212, 1305, 1313, 1406, 1414, 1506, 1512, 1604, 1608, 1701, 1703, 1796, 1799, 1892, 1896, 1989, 1996, 2089, 2098, 2190, 2196, 2289, 2293, 2385, 2388, 2481, 2484, 2577, 2580, 2673, 2680, 2773, 2781, 2874, 2881, 2973, 2977, 3070, 3073, 3166, 3168, 3261, 3265, 3358, 3363, 3456, 3465, 3558, 3565, 3658, 3662, 3755, 3758, 3851, 0 ]</td></tr><tr><td align="left" valign="top">Sun_data</td><td align="left" valign="top" balign="left">= [ 19, 77, 111, 169, 203, 261, 294, 352, 386, 444, 478, 536, 570, 628, 661, 719, 753, 811, 845, 903, 937, 995, 1028, 1087, 1120, 1178, 1212, 1270, 1303, 1362, 1395, 1454, 1487, 1545, 1579, 1637, 1670, 1729, 1762, 1821, 1854, 1913, 1946, 2004, 2037, 2096, 2129, 2188, 2221, 2280, 2313, 2372, 2404, 2463, 2496, 2555, 2588, 2647, 2680, 2739, 2771, 2831, 2863, 2922, 2955, 3014, 3047, 3106, 3138, 3198, 3230, 3289, 3322, 3381, 3413, 3473, 3505, 3565, 3597, 3657, 3689, 3748, 3780, 3840, 3872, 3932, 0 ]</td></tr><tr><td align="left" valign="top">UHF_data</td><td align="left" valign="top" balign="left">= [ 1015, 1019, 1107, 1116, 1201, 1211, 1296, 1306, 1392, 1400, 1489, 1492, 2481, 2489, 2575, 2584, 2670, 2680, 2765, 2774, 2861, 2868, 0 ]</td></tr><tr><td align="left" valign="top">X_Band_Kourou_data</td><td align="left" valign="top" balign="left">= [ 399, 408, 496, 502, 1089, 1096, 1183, 1192, 1773, 1781, 1867, 1877, 2556, 2566, 2653, 2659, 3240, 3250, 3339, 3343, 0 ]</td></tr><tr><td align="left" valign="top">X_Band_Toulouse_data</td><td align="left" valign="top" balign="left">= [ 114, 123, 1010, 1017, 1103, 1113, 1199, 1209, 1296, 1305, 1391, 1401, 1487, 1497, 1584, 1589, 2477, 2486, 2572, 2582, 2668, 2678, 2765, 2774, 2860, 2870, 2956, 2964, 0 ]</td></tr><tr><td align="left" valign="top">load</td><td align="left" valign="top" balign="left">= 179340</td></tr><tr><td align="left" valign="top">SoC</td><td align="left" valign="top" balign="left">= 119808000</td></tr><tr><td align="left" valign="top">last_a_time</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">current_a_time</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">L_3F2_i</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">L_3F3_i</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">Sun_i</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">UHF_i</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">X_Kourou_i</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">X_Toulouse_i</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">is_aligned</td><td align="left" valign="top" balign="left">= false</td></tr><tr><td align="left" valign="top">L_X_counter</td><td align="left" valign="top" balign="left">= [ 0, 0, 0, 0, 0, 2 ]</td></tr><tr><td align="left" valign="top">cost</td><td align="left" valign="top" balign="left">= 0</td></tr></table>>];
	0 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">Battery_job()</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">true</td></tr></table>>];
	1 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">do {<br align="left" />:: alt {<br align="left" /> :: when(SoC - load * (current_a_time - last_a_time) &gt;= 149760000) alt {<br align="left" /> :: update_PV {= SoC = 149760000 =}<br align="left" /> :: update_UHF {= SoC = 149760000 =}<br align="left" /> :: update_X_Band_Kourou {= SoC = 149760000 =}<br align="left" /> :: update_X_Band_Toulouse {= SoC = 149760000 =}<br align="left" /> :: update_L_Band_Inmarsat_3F2 {= SoC = 149760000 =}<br align="left" /> :: update_L_Band_Inmarsat_3F3 {= SoC = 149760000 =}<br align="left" /> }<br align="left" /> :: when(SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000) alt {<br align="left" /> :: update_PV {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_UHF {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_X_Band_Kourou {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_X_Band_Toulouse {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_L_Band_Inmarsat_3F2 {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_L_Band_Inmarsat_3F3 {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> }<br align="left" /> :: when(SoC - load * (current_a_time - last_a_time) &lt;= 59904000) alt {<br align="left" /> :: update_PV {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_UHF {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_X_Band_Kourou {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_X_Band_Toulouse {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_L_Band_Inmarsat_3F2 {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_L_Band_Inmarsat_3F3 {= cost = 1000 =};<br align="left" /> stop<br align="left" /> }<br align="left" /> }<br align="left" />}</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">true</td></tr></table>>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_PV, {= SoC = 149760000 =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_PV, {= SoC = 149760000 =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_UHF, {= SoC = 149760000 =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_X_Band_Kourou, {= SoC = 149760000 =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_X_Band_Toulouse, {= SoC = 149760000 =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_L_Band_Inmarsat_3F2, {= SoC = 149760000 =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_L_Band_Inmarsat_3F3, {= SoC = 149760000 =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_PV, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_UHF, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_X_Band_Kourou, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_X_Band_Toulouse, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_L_Band_Inmarsat_3F2, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	1 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_L_Band_Inmarsat_3F3, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	2 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> stop<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: alt {<br align="left" /> :: when(SoC - load * (current_a_time - last_a_time) &gt;= 149760000) alt {<br align="left" /> :: update_PV {= SoC = 149760000 =}<br align="left" /> :: update_UHF {= SoC = 149760000 =}<br align="left" /> :: update_X_Band_Kourou {= SoC = 149760000 =}<br align="left" /> :: update_X_Band_Toulouse {= SoC = 149760000 =}<br align="left" /> :: update_L_Band_Inmarsat_3F2 {= SoC = 149760000 =}<br align="left" /> :: update_L_Band_Inmarsat_3F3 {= SoC = 149760000 =}<br align="left" /> }<br align="left" /> :: when(SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000) alt {<br align="left" /> :: update_PV {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_UHF {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_X_Band_Kourou {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_X_Band_Toulouse {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_L_Band_Inmarsat_3F2 {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> :: update_L_Band_Inmarsat_3F3 {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" /> }<br align="left" /> :: when(SoC - load * (current_a_time - last_a_time) &lt;= 59904000) alt {<br align="left" /> :: update_PV {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_UHF {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_X_Band_Kourou {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_X_Band_Toulouse {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_L_Band_Inmarsat_3F2 {= cost = 1000 =};<br align="left" /> stop<br align="left" /> :: update_L_Band_Inmarsat_3F3 {= cost = 1000 =};<br align="left" /> stop<br align="left" /> }<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">true</td></tr></table>>];
	1 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_PV, {= cost = 1000 =}<br align="left" />>];
	1 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_UHF, {= cost = 1000 =}<br align="left" />>];
	1 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_X_Band_Kourou, {= cost = 1000 =}<br align="left" />>];
	1 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_X_Band_Toulouse, {= cost = 1000 =}<br align="left" />>];
	1 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_L_Band_Inmarsat_3F2, {= cost = 1000 =}<br align="left" />>];
	1 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_L_Band_Inmarsat_3F3, {= cost = 1000 =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_UHF, {= SoC = 149760000 =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_X_Band_Kourou, {= SoC = 149760000 =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_X_Band_Toulouse, {= SoC = 149760000 =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_L_Band_Inmarsat_3F2, {= SoC = 149760000 =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt;= 149760000, update_L_Band_Inmarsat_3F3, {= SoC = 149760000 =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_PV, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_UHF, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_X_Band_Kourou, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_X_Band_Toulouse, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_L_Band_Inmarsat_3F2, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	0 -> 1 [label=<SoC - load * (current_a_time - last_a_time) &gt; 59904000 &amp;&amp; SoC - load * (current_a_time - last_a_time) &lt; 149760000, update_L_Band_Inmarsat_3F3, {= SoC = SoC - load * (current_a_time - last_a_time) =}<br align="left" />>];
	0 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_PV, {= cost = 1000 =}<br align="left" />>];
	0 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_UHF, {= cost = 1000 =}<br align="left" />>];
	0 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_X_Band_Kourou, {= cost = 1000 =}<br align="left" />>];
	0 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_X_Band_Toulouse, {= cost = 1000 =}<br align="left" />>];
	0 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_L_Band_Inmarsat_3F2, {= cost = 1000 =}<br align="left" />>];
	0 -> 2 [label=<SoC - load * (current_a_time - last_a_time) &lt;= 59904000, update_L_Band_Inmarsat_3F3, {= cost = 1000 =}<br align="left" />>];
	_____initial3 [shape=none, style=invisible, label=""];
	_____initial3 -> 0 [label=<true<br align="left" />>];

	3 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">PV_job()</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= Sun_data[Sun_i]</td></tr></table>>];
	4 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= Sun_data[Sun_i]) alt {<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned) PV_aligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned) PV_notaligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" /> :: when(Sun_i &gt; 85) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	3 -> 4 [label=<clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned, PV_aligned_start, {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =}<br align="left" />>];
	5 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= Sun_data[Sun_i]) alt {<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned) PV_aligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned) PV_notaligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" /> :: when(Sun_i &gt; 85) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= Sun_data[Sun_i]</td></tr></table>>];
	4 -> 5 [label=<update_PV, {= load = load - 366000 =}<br align="left" />>];
	6 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= Sun_data[Sun_i]) alt {<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned) PV_aligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned) PV_notaligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" /> :: when(Sun_i &gt; 85) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	5 -> 6 [label=<clk &gt;= Sun_data[Sun_i], PV_aligned_end, {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =}<br align="left" />>];
	7 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">do {<br align="left" />:: constrain(clk &lt;= Sun_data[Sun_i]) alt {<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned) PV_aligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned) PV_notaligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" /> :: when(Sun_i &gt; 85) break<br align="left" /> }<br align="left" />}</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= Sun_data[Sun_i]</td></tr></table>>];
	6 -> 7 [label=<update_PV, {= load = load + 366000 =}<br align="left" />>];
	7 -> 4 [label=<clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned, PV_aligned_start, {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =}<br align="left" />>];
	8 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= Sun_data[Sun_i]) alt {<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned) PV_aligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned) PV_notaligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" /> :: when(Sun_i &gt; 85) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	7 -> 8 [label=<clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned, PV_notaligned_start, {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =}<br align="left" />>];
	9 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= Sun_data[Sun_i]) alt {<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned) PV_aligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned) PV_notaligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" /> :: when(Sun_i &gt; 85) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= Sun_data[Sun_i]</td></tr></table>>];
	8 -> 9 [label=<update_PV, {= load = load - 342000 =}<br align="left" />>];
	10 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= Sun_data[Sun_i]) alt {<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; is_aligned) PV_aligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 366000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_aligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 366000 =}<br align="left" /> :: when(clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned) PV_notaligned_start {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load - 342000 =};<br align="left" /> constrain(clk &lt;= Sun_data[Sun_i]) when(clk &gt;= Sun_data[Sun_i]) PV_notaligned_end {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =};<br align="left" /> constrain(false) update_PV {= load = load + 342000 =}<br align="left" /> :: when(Sun_i &gt; 85) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	9 -> 10 [label=<clk &gt;= Sun_data[Sun_i], PV_notaligned_end, {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =}<br align="left" />>];
	10 -> 7 [label=<update_PV, {= load = load + 342000 =}<br align="left" />>];
	11 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left"><font face="Segoe UI Symbol, GNU Unifont">✓</font></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">true</td></tr></table>>];
	7 -> 11 [label=<Sun_i &gt; 85, τ<br align="left" />>];
	3 -> 8 [label=<clk &gt;= Sun_data[Sun_i] &amp;&amp; Sun_i &lt;= 85 &amp;&amp; !is_aligned, PV_notaligned_start, {= Sun_i = Sun_i + 1, last_a_time = current_a_time, current_a_time = Sun_data[Sun_i] =}<br align="left" />>];
	3 -> 11 [label=<Sun_i &gt; 85, τ<br align="left" />>];
	_____initial12 [shape=none, style=invisible, label=""];
	_____initial12 -> 3 [label=<true<br align="left" />>];

	12 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">UHF_job()</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= UHF_data[UHF_i]</td></tr></table>>];
	13 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_UHF {= load = load + 157800 =};<br align="left" /> constrain(clk &lt;= UHF_data[UHF_i]) when(clk &gt;= UHF_data[UHF_i]) UHF_end {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load - 157800 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= UHF_data[UHF_i]) alt {<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_start {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load + 157800 =};<br align="left" /> constrain(clk &lt;= UHF_data[UHF_i]) when(clk &gt;= UHF_data[UHF_i]) UHF_end {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load - 157800 =}<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_skip {= UHF_i = UHF_i + 2, cost = 1000 =}<br align="left" /> :: when(UHF_i &gt; 21) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	12 -> 13 [label=<clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21, UHF_start, {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =}<br align="left" />>];
	14 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(clk &lt;= UHF_data[UHF_i]) when(clk &gt;= UHF_data[UHF_i]) UHF_end {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load - 157800 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= UHF_data[UHF_i]) alt {<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_start {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load + 157800 =};<br align="left" /> constrain(clk &lt;= UHF_data[UHF_i]) when(clk &gt;= UHF_data[UHF_i]) UHF_end {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load - 157800 =}<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_skip {= UHF_i = UHF_i + 2, cost = 1000 =}<br align="left" /> :: when(UHF_i &gt; 21) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= UHF_data[UHF_i]</td></tr></table>>];
	13 -> 14 [label=<update_UHF, {= load = load + 157800 =}<br align="left" />>];
	15 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_UHF {= load = load - 157800 =}<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(clk &lt;= UHF_data[UHF_i]) alt {<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_start {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load + 157800 =};<br align="left" /> constrain(clk &lt;= UHF_data[UHF_i]) when(clk &gt;= UHF_data[UHF_i]) UHF_end {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load - 157800 =}<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_skip {= UHF_i = UHF_i + 2, cost = 1000 =}<br align="left" /> :: when(UHF_i &gt; 21) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	14 -> 15 [label=<clk &gt;= UHF_data[UHF_i], UHF_end, {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =}<br align="left" />>];
	16 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">do {<br align="left" />:: constrain(clk &lt;= UHF_data[UHF_i]) alt {<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_start {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load + 157800 =};<br align="left" /> constrain(clk &lt;= UHF_data[UHF_i]) when(clk &gt;= UHF_data[UHF_i]) UHF_end {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =};<br align="left" /> constrain(false) update_UHF {= load = load - 157800 =}<br align="left" /> :: when(clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21) UHF_skip {= UHF_i = UHF_i + 2, cost = 1000 =}<br align="left" /> :: when(UHF_i &gt; 21) break<br align="left" /> }<br align="left" />}</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= UHF_data[UHF_i]</td></tr></table>>];
	15 -> 16 [label=<update_UHF, {= load = load - 157800 =}<br align="left" />>];
	16 -> 13 [label=<clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21, UHF_start, {= UHF_i = UHF_i + 1, last_a_time = current_a_time, current_a_time = UHF_data[UHF_i] =}<br align="left" />>];
	16 -> 16 [label=<clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21, UHF_skip, {= UHF_i = UHF_i + 2, cost = 1000 =}<br align="left" />>];
	17 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left"><font face="Segoe UI Symbol, GNU Unifont">✓</font></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">true</td></tr></table>>];
	16 -> 17 [label=<UHF_i &gt; 21, τ<br align="left" />>];
	12 -> 16 [label=<clk &gt;= UHF_data[UHF_i] &amp;&amp; UHF_i &lt;= 21, UHF_skip, {= UHF_i = UHF_i + 2, cost = 1000 =}<br align="left" />>];
	12 -> 17 [label=<UHF_i &gt; 21, τ<br align="left" />>];
	_____initial18 [shape=none, style=invisible, label=""];
	_____initial18 -> 12 [label=<true<br align="left" />>];

	18 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">L_X_Scheduler()</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	19 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40</td></tr></table>>];
	18 -> 19 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F2, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =}<br align="left" />>];
	20 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load + 24840 =};<br align="left" /> constrain(job_clk &lt;= 40) when(job_clk &gt;= 40) L_3F2_start {= last_a_time = current_a_time, current_a_time = current_a_time + 40, job_clk = 0, is_aligned = true =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load + 206940 =};<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) L_3F2_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F2_data[L_3F2_i], job_clk = 0, L_3F2_i = L_3F2_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F2_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	19 -> 20 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 &amp;&amp; L_3F2_i &lt;= 75, L_3F2_slew_preheat, {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F2_data[L_3F2_i] - 40, job_clk = 0, L_3F2_i = L_3F2_i + 1 =}<br align="left" />>];
	21 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 40) when(job_clk &gt;= 40) L_3F2_start {= last_a_time = current_a_time, current_a_time = current_a_time + 40, job_clk = 0, is_aligned = true =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load + 206940 =};<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) L_3F2_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F2_data[L_3F2_i], job_clk = 0, L_3F2_i = L_3F2_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F2_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 40</td></tr></table>>];
	20 -> 21 [label=<update_L_Band_Inmarsat_3F2, {= load = load + 24840 =}<br align="left" />>];
	22 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load + 206940 =};<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) L_3F2_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F2_data[L_3F2_i], job_clk = 0, L_3F2_i = L_3F2_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F2_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	21 -> 22 [label=<job_clk &gt;= 40, L_3F2_start, {= last_a_time = current_a_time, current_a_time = current_a_time + 40, job_clk = 0, is_aligned = true =}<br align="left" />>];
	23 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i]) L_3F2_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F2_data[L_3F2_i], job_clk = 0, L_3F2_i = L_3F2_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F2_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i]</td></tr></table>>];
	22 -> 23 [label=<update_L_Band_Inmarsat_3F2, {= load = load + 206940 =}<br align="left" />>];
	24 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F2_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	23 -> 24 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i], L_3F2_slewback, {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F2_data[L_3F2_i], job_clk = 0, L_3F2_i = L_3F2_i + 1 =}<br align="left" />>];
	25 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F2_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 10</td></tr></table>>];
	24 -> 25 [label=<update_L_Band_Inmarsat_3F2, {= load = load - 206940 =}<br align="left" />>];
	26 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F2 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	25 -> 26 [label=<job_clk &gt;= 10, L_3F2_end, {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =}<br align="left" />>];
	27 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	26 -> 27 [label=<update_L_Band_Inmarsat_3F2, {= load = load - 24840 =}<br align="left" />>];
	28 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 &amp;&amp; L_3F2_i &lt;= 75) Skip_3F2 {= L_3F2_i = L_3F2_i + 2 =}<br align="left" /> :: when(clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 &amp;&amp; L_3F2_i &lt;= 75) break<br align="left" /> }<br align="left" /> };<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 &amp;&amp; L_3F3_i &lt;= 77) Skip_3F3 {= L_3F3_i = L_3F3_i + 2 =}<br align="left" /> :: when(clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 &amp;&amp; L_3F3_i &lt;= 77) break<br align="left" /> }<br align="left" /> };<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19) Skip_Kourou {= X_Kourou_i = X_Kourou_i + 2 =}<br align="left" /> :: when(clk &lt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19) break<br align="left" /> }<br align="left" /> };<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) Skip_Toulouse {= X_Toulouse_i = X_Toulouse_i + 2 =}<br align="left" /> :: when(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	27 -> 28 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 &amp;&amp; L_3F2_i &lt;= 75, Skip_3F2, {= L_3F2_i = L_3F2_i + 2 =}<br align="left" />>];
	28 -> 28 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 &amp;&amp; L_3F2_i &lt;= 75, Skip_3F2, {= L_3F2_i = L_3F2_i + 2 =}<br align="left" />>];
	29 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 &amp;&amp; L_3F3_i &lt;= 77) Skip_3F3 {= L_3F3_i = L_3F3_i + 2 =}<br align="left" /> :: when(clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 &amp;&amp; L_3F3_i &lt;= 77) break<br align="left" /> }<br align="left" /> };<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19) Skip_Kourou {= X_Kourou_i = X_Kourou_i + 2 =}<br align="left" /> :: when(clk &lt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19) break<br align="left" /> }<br align="left" /> };<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) Skip_Toulouse {= X_Toulouse_i = X_Toulouse_i + 2 =}<br align="left" /> :: when(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	28 -> 29 [label=<clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 &amp;&amp; L_3F2_i &lt;= 75, τ<br align="left" />>];
	29 -> 29 [label=<clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 &amp;&amp; L_3F3_i &lt;= 77, Skip_3F3, {= L_3F3_i = L_3F3_i + 2 =}<br align="left" />>];
	30 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19) Skip_Kourou {= X_Kourou_i = X_Kourou_i + 2 =}<br align="left" /> :: when(clk &lt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19) break<br align="left" /> }<br align="left" /> };<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) Skip_Toulouse {= X_Toulouse_i = X_Toulouse_i + 2 =}<br align="left" /> :: when(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	29 -> 30 [label=<clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 &amp;&amp; L_3F3_i &lt;= 77, τ<br align="left" />>];
	30 -> 30 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19, Skip_Kourou, {= X_Kourou_i = X_Kourou_i + 2 =}<br align="left" />>];
	31 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) Skip_Toulouse {= X_Toulouse_i = X_Toulouse_i + 2 =}<br align="left" /> :: when(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27) break<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	30 -> 31 [label=<clk &lt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19, τ<br align="left" />>];
	31 -> 31 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27, Skip_Toulouse, {= X_Toulouse_i = X_Toulouse_i + 2 =}<br align="left" />>];
	32 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">do {<br align="left" />:: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" />}</td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	31 -> 32 [label=<clk &lt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27, τ<br align="left" />>];
	32 -> 19 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F2, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =}<br align="left" />>];
	32 -> 19 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F2, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =}<br align="left" />>];
	33 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40</td></tr></table>>];
	32 -> 33 [label=<clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F3, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =}<br align="left" />>];
	34 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load + 24840 =};<br align="left" /> constrain(job_clk &lt;= 40) when(job_clk &gt;= 40) L_3F3_start {= last_a_time = current_a_time, current_a_time = current_a_time + 40, job_clk = 0, is_aligned = true =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load + 206940 =};<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) L_3F3_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F3_data[L_3F3_i], job_clk = 0, L_3F3_i = L_3F3_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F3_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	33 -> 34 [label=<clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 &amp;&amp; L_3F3_i &lt;= 77, L_3F3_slew_preheat, {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F3_data[L_3F3_i] - 40, job_clk = 0, L_3F3_i = L_3F3_i + 1 =}<br align="left" />>];
	35 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 40) when(job_clk &gt;= 40) L_3F3_start {= last_a_time = current_a_time, current_a_time = current_a_time + 40, job_clk = 0, is_aligned = true =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load + 206940 =};<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) L_3F3_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F3_data[L_3F3_i], job_clk = 0, L_3F3_i = L_3F3_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F3_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 40</td></tr></table>>];
	34 -> 35 [label=<update_L_Band_Inmarsat_3F3, {= load = load + 24840 =}<br align="left" />>];
	36 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load + 206940 =};<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) L_3F3_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F3_data[L_3F3_i], job_clk = 0, L_3F3_i = L_3F3_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F3_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	35 -> 36 [label=<job_clk &gt;= 40, L_3F3_start, {= last_a_time = current_a_time, current_a_time = current_a_time + 40, job_clk = 0, is_aligned = true =}<br align="left" />>];
	37 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i]) L_3F3_slewback {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F3_data[L_3F3_i], job_clk = 0, L_3F3_i = L_3F3_i + 1 =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F3_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= L_Band_Inmarsat_3F3_data[L_3F3_i]</td></tr></table>>];
	36 -> 37 [label=<update_L_Band_Inmarsat_3F3, {= load = load + 206940 =}<br align="left" />>];
	38 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 206940 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F3_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	37 -> 38 [label=<clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i], L_3F3_slewback, {= last_a_time = current_a_time, current_a_time = L_Band_Inmarsat_3F3_data[L_3F3_i], job_clk = 0, L_3F3_i = L_3F3_i + 1 =}<br align="left" />>];
	39 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) L_3F3_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =};<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 10</td></tr></table>>];
	38 -> 39 [label=<update_L_Band_Inmarsat_3F3, {= load = load - 206940 =}<br align="left" />>];
	40 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_L_Band_Inmarsat_3F3 {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	39 -> 40 [label=<job_clk &gt;= 10, L_3F3_end, {= last_a_time = current_a_time, current_a_time = current_a_time + 10, is_aligned = false =}<br align="left" />>];
	40 -> 27 [label=<update_L_Band_Inmarsat_3F3, {= load = load - 24840 =}<br align="left" />>];
	41 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left"><font face="Segoe UI Symbol, GNU Unifont">✓</font></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">true</td></tr></table>>];
	33 -> 41 [label=<L_3F3_i &gt; 77, τ<br align="left" />>];
	32 -> 33 [label=<clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F3, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =}<br align="left" />>];
	42 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= X_Band_Kourou_data[X_Kourou_i] - 20</td></tr></table>>];
	32 -> 42 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Kourou, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =}<br align="left" />>];
	43 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load + 24840 =};<br align="left" /> constrain(job_clk &lt;= 20) when(job_clk &gt;= 20) X_Kourou_start {= last_a_time = current_a_time, current_a_time = current_a_time + 20, job_clk = 0 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load + 691860 =};<br align="left" /> constrain(clk &lt;= X_Band_Kourou_data[X_Kourou_i]) when(clk &gt;= X_Band_Kourou_data[X_Kourou_i]) X_Kourou_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Kourou_data[X_Kourou_i], job_clk = 0, X_Kourou_i = X_Kourou_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Kourou_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	42 -> 43 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 &amp;&amp; X_Kourou_i &lt;= 19, X_Kourou_slew_preheat, {= last_a_time = current_a_time, current_a_time = X_Band_Kourou_data[X_Kourou_i] - 20, job_clk = 0, X_Kourou_i = X_Kourou_i + 1 =}<br align="left" />>];
	44 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 20) when(job_clk &gt;= 20) X_Kourou_start {= last_a_time = current_a_time, current_a_time = current_a_time + 20, job_clk = 0 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load + 691860 =};<br align="left" /> constrain(clk &lt;= X_Band_Kourou_data[X_Kourou_i]) when(clk &gt;= X_Band_Kourou_data[X_Kourou_i]) X_Kourou_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Kourou_data[X_Kourou_i], job_clk = 0, X_Kourou_i = X_Kourou_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Kourou_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 20</td></tr></table>>];
	43 -> 44 [label=<update_X_Band_Kourou, {= load = load + 24840 =}<br align="left" />>];
	45 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load + 691860 =};<br align="left" /> constrain(clk &lt;= X_Band_Kourou_data[X_Kourou_i]) when(clk &gt;= X_Band_Kourou_data[X_Kourou_i]) X_Kourou_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Kourou_data[X_Kourou_i], job_clk = 0, X_Kourou_i = X_Kourou_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Kourou_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	44 -> 45 [label=<job_clk &gt;= 20, X_Kourou_start, {= last_a_time = current_a_time, current_a_time = current_a_time + 20, job_clk = 0 =}<br align="left" />>];
	46 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(clk &lt;= X_Band_Kourou_data[X_Kourou_i]) when(clk &gt;= X_Band_Kourou_data[X_Kourou_i]) X_Kourou_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Kourou_data[X_Kourou_i], job_clk = 0, X_Kourou_i = X_Kourou_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Kourou_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= X_Band_Kourou_data[X_Kourou_i]</td></tr></table>>];
	45 -> 46 [label=<update_X_Band_Kourou, {= load = load + 691860 =}<br align="left" />>];
	47 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Kourou_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	46 -> 47 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i], X_Kourou_slewback, {= last_a_time = current_a_time, current_a_time = X_Band_Kourou_data[X_Kourou_i], job_clk = 0, X_Kourou_i = X_Kourou_i + 1 =}<br align="left" />>];
	48 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Kourou_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 10</td></tr></table>>];
	47 -> 48 [label=<update_X_Band_Kourou, {= load = load - 691860 =}<br align="left" />>];
	49 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Kourou {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	48 -> 49 [label=<job_clk &gt;= 10, X_Kourou_end, {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =}<br align="left" />>];
	49 -> 27 [label=<update_X_Band_Kourou, {= load = load - 24840 =}<br align="left" />>];
	42 -> 41 [label=<X_Kourou_i &gt; 19, τ<br align="left" />>];
	32 -> 42 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Kourou, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =}<br align="left" />>];
	32 -> 42 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Kourou, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =}<br align="left" />>];
	50 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= X_Band_Toulouse_data[X_Toulouse_i] - 20</td></tr></table>>];
	32 -> 50 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Toulouse, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =}<br align="left" />>];
	51 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load + 24840 =};<br align="left" /> constrain(job_clk &lt;= 20) when(job_clk &gt;= 20) X_Toulouse_start {= last_a_time = current_a_time, current_a_time = current_a_time + 20, job_clk = 0 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load + 691860 =};<br align="left" /> constrain(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i]) when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i]) X_Toulouse_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Toulouse_data[X_Toulouse_i], job_clk = 0, X_Toulouse_i = X_Toulouse_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Toulouse_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	50 -> 51 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 &amp;&amp; X_Toulouse_i &lt;= 27, X_Toulouse_slew_preheat, {= last_a_time = current_a_time, current_a_time = X_Band_Toulouse_data[X_Toulouse_i] - 20, job_clk = 0, X_Toulouse_i = X_Toulouse_i + 1 =}<br align="left" />>];
	52 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 20) when(job_clk &gt;= 20) X_Toulouse_start {= last_a_time = current_a_time, current_a_time = current_a_time + 20, job_clk = 0 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load + 691860 =};<br align="left" /> constrain(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i]) when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i]) X_Toulouse_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Toulouse_data[X_Toulouse_i], job_clk = 0, X_Toulouse_i = X_Toulouse_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Toulouse_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 20</td></tr></table>>];
	51 -> 52 [label=<update_X_Band_Toulouse, {= load = load + 24840 =}<br align="left" />>];
	53 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load + 691860 =};<br align="left" /> constrain(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i]) when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i]) X_Toulouse_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Toulouse_data[X_Toulouse_i], job_clk = 0, X_Toulouse_i = X_Toulouse_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Toulouse_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	52 -> 53 [label=<job_clk &gt;= 20, X_Toulouse_start, {= last_a_time = current_a_time, current_a_time = current_a_time + 20, job_clk = 0 =}<br align="left" />>];
	54 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(clk &lt;= X_Band_Toulouse_data[X_Toulouse_i]) when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i]) X_Toulouse_slewback {= last_a_time = current_a_time, current_a_time = X_Band_Toulouse_data[X_Toulouse_i], job_clk = 0, X_Toulouse_i = X_Toulouse_i + 1 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Toulouse_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">clk &lt;= X_Band_Toulouse_data[X_Toulouse_i]</td></tr></table>>];
	53 -> 54 [label=<update_X_Band_Toulouse, {= load = load + 691860 =}<br align="left" />>];
	55 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 691860 =};<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Toulouse_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	54 -> 55 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i], X_Toulouse_slewback, {= last_a_time = current_a_time, current_a_time = X_Band_Toulouse_data[X_Toulouse_i], job_clk = 0, X_Toulouse_i = X_Toulouse_i + 1 =}<br align="left" />>];
	56 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(job_clk &lt;= 10) when(job_clk &gt;= 10) X_Toulouse_end {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =};<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">job_clk &lt;= 10</td></tr></table>>];
	55 -> 56 [label=<update_X_Band_Toulouse, {= load = load - 691860 =}<br align="left" />>];
	57 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(false) update_X_Band_Toulouse {= load = load - 24840 =};<br align="left" /> L_X_Skip()<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">false</td></tr></table>>];
	56 -> 57 [label=<job_clk &gt;= 10, X_Toulouse_end, {= last_a_time = current_a_time, current_a_time = current_a_time + 10 =}<br align="left" />>];
	57 -> 27 [label=<update_X_Band_Toulouse, {= load = load - 24840 =}<br align="left" />>];
	50 -> 41 [label=<X_Toulouse_i &gt; 27, τ<br align="left" />>];
	32 -> 50 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Toulouse, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =}<br align="left" />>];
	32 -> 50 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Toulouse, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =}<br align="left" />>];
	58 [shape=box, label=<<table border="0"><tr><td align="left" valign="top">Label:</td><td align="left" valign="top" balign="left">auxdo<br align="left" />{<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: constrain(false) alt {<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F2 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =};<br align="left" /> L_Band_Inmarsat_3F2_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1) Sched_3F3 {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =};<br align="left" /> L_Band_Inmarsat_3F3_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Kourou {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =};<br align="left" /> X_Band_Kourou_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0) Sched_Toulouse {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =};<br align="left" /> X_Band_Toulouse_job();<br align="left" /> L_X_Skip()<br align="left" /> :: when(L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27) Sched_Nothing {= cost = 1000, sched_clk = 0 =};<br align="left" /> constrain(sched_clk &lt;= 600) when(sched_clk &gt;= 600) tick_sched<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /></td></tr><tr><td align="left" valign="top">Time progress:</td><td align="left" valign="top" balign="left">sched_clk &lt;= 600</td></tr></table>>];
	32 -> 58 [label=<L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27, Sched_Nothing, {= cost = 1000, sched_clk = 0 =}<br align="left" />>];
	58 -> 32 [label=<sched_clk &gt;= 600, tick_sched<br align="left" />>];
	27 -> 29 [label=<clk &lt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 &amp;&amp; L_3F2_i &lt;= 75, τ<br align="left" />>];
	19 -> 41 [label=<L_3F2_i &gt; 75, τ<br align="left" />>];
	18 -> 19 [label=<clk &gt;= L_Band_Inmarsat_3F2_data[L_3F2_i] - 40 - 600 &amp;&amp; L_3F2_i &lt;= 75 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F2, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[0] = L_X_counter[0] + 1, cost = 1000 + L_X_counter[0] =}<br align="left" />>];
	18 -> 33 [label=<clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F3, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = L_X_counter[1] =}<br align="left" />>];
	18 -> 33 [label=<clk &gt;= L_Band_Inmarsat_3F3_data[L_3F3_i] - 40 - 600 &amp;&amp; L_3F3_i &lt;= 77 &amp;&amp; L_X_counter[5] &lt; 2 &amp;&amp; L_X_counter[4] &lt; 1, Sched_3F3, {= L_X_counter[5] = 0, L_X_counter[4] = L_X_counter[4] + 1, L_X_counter[1] = L_X_counter[1] + 1, cost = 1000 + L_X_counter[1] =}<br align="left" />>];
	18 -> 42 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Kourou, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =}<br align="left" />>];
	18 -> 42 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Kourou, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = L_X_counter[2] =}<br align="left" />>];
	18 -> 42 [label=<clk &gt;= X_Band_Kourou_data[X_Kourou_i] - 20 - 600 &amp;&amp; X_Kourou_i &lt;= 19 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Kourou, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[2] = L_X_counter[2] + 1, cost = 1000 + L_X_counter[2] =}<br align="left" />>];
	18 -> 50 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &lt; 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Toulouse, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =}<br align="left" />>];
	18 -> 50 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 1 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Toulouse, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = L_X_counter[3] =}<br align="left" />>];
	18 -> 50 [label=<clk &gt;= X_Band_Toulouse_data[X_Toulouse_i] - 20 - 600 &amp;&amp; X_Toulouse_i &lt;= 27 &amp;&amp; L_X_counter[5] &gt;= 2 &amp;&amp; L_X_counter[4] &gt; 0, Sched_Toulouse, {= L_X_counter[5] = L_X_counter[5] + 1, L_X_counter[4] = 0, L_X_counter[3] = L_X_counter[3] + 1, cost = 1000 + L_X_counter[3] =}<br align="left" />>];
	18 -> 58 [label=<L_3F2_i &lt;= 75 || L_3F3_i &lt;= 77 || X_Kourou_i &lt;= 19 || X_Toulouse_i &lt;= 27, Sched_Nothing, {= cost = 1000, sched_clk = 0 =}<br align="left" />>];
	_____initial59 [shape=none, style=invisible, label=""];
	_____initial59 -> 18 [label=<sched_clk == 0<br align="left" />>];

}
